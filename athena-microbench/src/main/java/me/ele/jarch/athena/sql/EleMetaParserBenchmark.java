package me.ele.jarch.athena.sql;

import microbench.util.AbstractMicrobenchmark;
import org.openjdk.jmh.annotations.*;

/**
 * Created by jinghao.wang on 2018/6/14.
 */
@BenchmarkMode(Mode.Throughput) @Warmup(iterations = 2) @Fork(1) public class EleMetaParserBenchmark
    extends AbstractMicrobenchmark {
    private static final String LONG_SQL_WITH_COMMENT =
        "/* E:role=slave&shardkey=shardid&appid=zeus.eos&shardvalue=8&rid=nevermore.api^^6B629D7FC725477AB5CD644B91F5E2FB|1528967046307&rpcid=1.1.4.1.2.1:E */SELECT restaurant.id AS restaurant_id, restaurant.oid AS restaurant_oid, restaurant.is_valid AS restaurant_is_valid, restaurant.agent_fee AS restaurant_agent_fee, restaurant.busy_level AS restaurant_busy_level , restaurant.name AS restaurant_name, restaurant.is_premium AS restaurant_is_premium, restaurant.latitude AS restaurant_latitude, restaurant.longitude AS restaurant_longitude, restaurant.description AS restaurant_description , restaurant.address_text AS restaurant_address_text, restaurant.deliver_description AS restaurant_deliver_description, restaurant.num_rating_1 AS restaurant_num_rating_1, restaurant.num_rating_2 AS restaurant_num_rating_2, restaurant.num_rating_3 AS restaurant_num_rating_3 , restaurant.num_rating_4 AS restaurant_num_rating_4, restaurant.num_rating_5 AS restaurant_num_rating_5, restaurant.service_rating AS restaurant_service_rating, restaurant.created_at AS restaurant_created_at, restaurant.updated_at AS restaurant_updated_at , restaurant.image_url AS restaurant_image_url, restaurant.image_hash AS restaurant_image_hash, restaurant.phone AS restaurant_phone, restaurant.mobile AS restaurant_mobile, restaurant.order_mode AS restaurant_order_mode , restaurant.promotion_info AS restaurant_promotion_info, restaurant.one_delivery AS restaurant_one_delivery, restaurant.pinyin_name AS restaurant_pinyin_name, restaurant.name_for_url AS restaurant_name_for_url, restaurant.min_deliver_amount AS restaurant_min_deliver_amount , restaurant.close_description AS restaurant_close_description, restaurant.is_saas AS restaurant_is_saas, restaurant.header_image_url AS restaurant_header_image_url, restaurant.waimai_num_print_copies AS restaurant_waimai_num_print_copies, restaurant.tangchi_num_print_copies AS restaurant_tangchi_num_print_copies , restaurant.printer_version AS restaurant_printer_version, restaurant.napos_client_settings AS restaurant_napos_client_settings, restaurant.sn AS restaurant_sn, restaurant.deliver_radius AS restaurant_deliver_radius, restaurant.min_lng AS restaurant_min_lng , restaurant.max_lng AS restaurant_max_lng, restaurant.min_lat AS restaurant_min_lat, restaurant.max_lat AS restaurant_max_lat, restaurant.is_bookable AS restaurant_is_bookable, restaurant.flavors AS restaurant_flavors , restaurant.dine_enabled AS restaurant_dine_enabled, restaurant.deliver_spent AS restaurant_deliver_spent, restaurant.is_time_ensure AS restaurant_is_time_ensure, restaurant.time_ensure_description AS restaurant_time_ensure_description, restaurant.time_ensure_at AS restaurant_time_ensure_at , restaurant.time_ensure_spent AS restaurant_time_ensure_spent, restaurant.time_ensure_discount AS restaurant_time_ensure_discount, restaurant.city_id AS restaurant_city_id, restaurant.is_phone_hidden AS restaurant_is_phone_hidden, restaurant.coupon_enabled AS restaurant_coupon_enabled , restaurant.coupon_start_at AS restaurant_coupon_start_at, restaurant.coupon_end_at AS restaurant_coupon_end_at, restaurant.coupon_number AS restaurant_coupon_number, restaurant.coupon_discount AS restaurant_coupon_discount, restaurant.paper_width AS restaurant_paper_width , restaurant.auto_print_tangchi AS restaurant_auto_print_tangchi, restaurant.speed_coef1 AS restaurant_speed_coef1, restaurant.speed_coef2 AS restaurant_speed_coef2, restaurant.speed_coef3 AS restaurant_speed_coef3, restaurant.avg_comment_time AS restaurant_avg_comment_time , restaurant.activities AS restaurant_activities, restaurant.has_food_img AS restaurant_has_food_img, restaurant.online_payment AS restaurant_online_payment, restaurant.invoice AS restaurant_invoice, restaurant.invoice_min_amount AS restaurant_invoice_min_amount , restaurant.attribute AS restaurant_attribute, restaurant.deliver_area AS restaurant_deliver_area, restaurant.deliver_geojson AS restaurant_deliver_geojson, restaurant.open_date AS restaurant_open_date, restaurant.original_order_quantity AS restaurant_original_order_quantity , restaurant.keeper_name AS restaurant_keeper_name, restaurant.keeper_phone AS restaurant_keeper_phone, restaurant.keeper_identity_card AS restaurant_keeper_identity_card, restaurant.remark AS restaurant_remark, restaurant.corporation AS restaurant_corporation , restaurant.geohash_ranking_weight AS restaurant_geohash_ranking_weight, restaurant.wireless_printer_esn AS restaurant_wireless_printer_esn, restaurant.open_time AS restaurant_open_time, restaurant.recent_food_popularity AS restaurant_recent_food_popularity, restaurant.come_from AS restaurant_come_from , restaurant.no_agent_fee_total AS restaurant_no_agent_fee_total, restaurant.service_category AS restaurant_service_category, restaurant.dock_corp_id AS restaurant_dock_corp_id, restaurant.recent_order_num AS restaurant_recent_order_num, restaurant.has_activity AS restaurant_has_activity , restaurant.certification_type AS restaurant_certification_type, restaurant.method_of_payment AS restaurant_method_of_payment, restaurant.is_exclusive AS restaurant_is_exclusive, restaurant.type AS restaurant_type, restaurant.saturn_province_id AS restaurant_saturn_province_id , restaurant.saturn_city_id AS restaurant_saturn_city_id, restaurant.saturn_district_id AS restaurant_saturn_district_id, restaurant.app_id AS restaurant_app_id, restaurant.open_id AS restaurant_open_id, restaurant.contact_number AS restaurant_contact_number , restaurant.deliver_geojson_present AS restaurant_deliver_geojson_present, restaurant.promised_cooking_time AS restaurant_promised_cooking_time, restaurant.is_baidu_valid AS restaurant_is_baidu_valid FROM restaurant WHERE restaurant.id IN (1,2,3,4,5,6,67,7,8,9,9,0,0)";

    @Benchmark public EleMetaParser parseLongSQLWithComment() {
        return parseSQLWithComment(LONG_SQL_WITH_COMMENT);
    }

    private static EleMetaParser parseSQLWithComment(String sqlWithComment) {
        return EleMetaParser.parse(sqlWithComment);
    }
}
